{"version":3,"file":"commons-2a41e8cf36c180796b12.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/Load.js","webpack://gatsby-starter-hello-world/./src/components/PatientInfo.js","webpack://gatsby-starter-hello-world/./src/components/Identifiers.js","webpack://gatsby-starter-hello-world/./src/components/Diagnosis.js","webpack://gatsby-starter-hello-world/./src/components/Weight.js","webpack://gatsby-starter-hello-world/./src/components/SCr.js","webpack://gatsby-starter-hello-world/./src/components/CrCl.js","webpack://gatsby-starter-hello-world/./src/components/CrClCalculated.js","webpack://gatsby-starter-hello-world/./src/components/Vd.js","webpack://gatsby-starter-hello-world/./src/components/Ke.js","webpack://gatsby-starter-hello-world/./src/components/MaintenanceDoseTable.js","webpack://gatsby-starter-hello-world/./src/components/NavigationButtons.js","webpack://gatsby-starter-hello-world/./src/components/Buttons.js","webpack://gatsby-starter-hello-world/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://gatsby-starter-hello-world/./src/utils.js"],"sourcesContent":["import React from \"react\"\r\nimport { Patient } from \"../utils\"\r\n\r\nconst Load = ({ pt, setPt }) => {\r\n  const isBrowser = typeof window !== \"undefined\"\r\n\r\n  const style = { width: \"100%\", textAlign: \"left\" }\r\n\r\n  let localPts = []\r\n  if (isBrowser) {\r\n    localPts = localStorage.getItem(\"pts\")\r\n    if (localPts) {\r\n      localPts = JSON.parse(localPts)\r\n    } else {\r\n      localPts = []\r\n    }\r\n    localPts = localPts.map(currPt => new Patient(currPt))\r\n  }\r\n\r\n  function handleLoad(e) {\r\n    if (isBrowser) {\r\n      let searchTerm = document.getElementById(\"load\").value\r\n\r\n      let idx = localPts.findIndex(\r\n        currPt =>\r\n          String(currPt.mrn) === searchTerm || currPt.name === searchTerm\r\n      )\r\n      if (idx === -1) {\r\n        alert(\"Patient not found.\")\r\n      } else {\r\n        setPt(localPts[idx])\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"box load\">\r\n      <h1>Load</h1>\r\n      <label style={style} htmlFor=\"load\">\r\n        Load Patient:\r\n      </label>\r\n      <br />\r\n      <input style={style} id=\"load\" list=\"patients\" />\r\n      <datalist id=\"patients\">\r\n        {localPts.map((pt, idx) => (\r\n          <option key={idx} value={pt.mrn}>\r\n            {pt.name}\r\n          </option>\r\n        ))}\r\n      </datalist>\r\n      <button\r\n        style={{ width: \"100%\", textAlign: \"center\" }}\r\n        onClick={e => handleLoad(e)}\r\n      >\r\n        Load\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Load\r\n","import React from \"react\"\r\n\r\nimport {\r\n  Load,\r\n  Identifiers,\r\n  Diagnosis,\r\n  Weight,\r\n  SCr,\r\n  CrCl,\r\n  CrClCalculated,\r\n  Vd,\r\n  Ke,\r\n} from \"./\"\r\n\r\nconst PatientInfo = ({ pt, setPt }) => {\r\n  function reorder() {\r\n    const displayLogic = Boolean(\r\n      (pt.tbw_ibw && pt.tbw_ibw > 1.2) || (pt.scr && pt.scr < 1)\r\n    )\r\n\r\n    if (pt.scr && pt.scr < 1) {\r\n      return (\r\n        <>\r\n          {displayLogic && <CrClCalculated pt={pt} setPt={setPt} />}\r\n          <SCr pt={pt} setPt={setPt} />\r\n        </>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          {<SCr pt={pt} setPt={setPt} />}\r\n          {displayLogic && <CrClCalculated pt={pt} setPt={setPt} />}\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  function displayManualCrClLogic() {\r\n    if (pt.scr && pt.scr >= 1 && pt.tbw_ibw && pt.tbw_ibw < 1.2) {\r\n      return <CrCl pt={pt} setPt={setPt} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Vanco AUC Calculator</h1>\r\n      <div style={{ display: \"flex\", gap: \"4px\", flexWrap: \"wrap\" }}>\r\n        <div>\r\n          <Load pt={pt} setPt={setPt} />\r\n          <Identifiers pt={pt} setPt={setPt} />\r\n          <Diagnosis pt={pt} setPt={setPt} />\r\n        </div>\r\n        <div>\r\n          <Weight pt={pt} setPt={setPt} />\r\n          {reorder()}\r\n          {displayManualCrClLogic()}\r\n        </div>\r\n        <div>\r\n          {pt.weight && pt.crcl && <Vd pt={pt} setPt={setPt} />}\r\n          {pt.crcl && <Ke pt={pt} setPt={setPt} />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PatientInfo\r\n","import React from \"react\"\r\n\r\nimport { Patient } from \"../utils\"\r\n\r\nconst Identifiers = ({ pt, setPt }) => {\r\n  let style = { width: \"100%\", textAlign: \"left\" }\r\n  let style2 = { height: \"28px\" }\r\n\r\n  return (\r\n    <div className=\"box tbw_ibw\">\r\n      <h1>Identifiers</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div>\r\n          <label style={style2} htmlFor=\"mrn\">\r\n            MRN\r\n          </label>\r\n          <label style={style2} htmlFor=\"last-name\">\r\n            Last Name\r\n          </label>\r\n          <label style={style2} htmlFor=\"first-name\">\r\n            First Name\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            style={style}\r\n            id=\"mrn\"\r\n            onChange={e => setPt(new Patient({ ...pt, mrn: e.target.value }))}\r\n            value={pt.mrn}\r\n          />\r\n\r\n          <input\r\n            style={style}\r\n            id=\"last-name\"\r\n            onChange={e =>\r\n              setPt(new Patient({ ...pt, last_name: e.target.value }))\r\n            }\r\n            value={pt.last_name}\r\n          />\r\n\r\n          <input\r\n            style={style}\r\n            id=\"first-name\"\r\n            onChange={e =>\r\n              setPt(new Patient({ ...pt, first_name: e.target.value }))\r\n            }\r\n            value={pt.first_name}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Identifiers\r\n","import React from \"react\"\r\n\r\nimport { Patient } from \"../utils\"\r\n\r\nconst style = { width: \"100%\", textAlign: \"left\" }\r\n\r\nconst Diagnosis = ({ pt, setPt }) => {\r\n  const isBrowser = typeof window !== \"undefined\"\r\n\r\n  let providers = []\r\n  let indications =\r\n    \"Cellulitis, Skin and Soft Tissue Infection, SSTI, Pneumonia, PNA, Osteomyelitis, Meningitis, Bacteremia, Endocarditis, Sepsis\".split(\r\n      \", \"\r\n    )\r\n\r\n  if (isBrowser) {\r\n    let localPts = localStorage.getItem(\"pts\")\r\n    localPts = localPts ? JSON.parse(localPts) : []\r\n\r\n    providers = localPts\r\n      .map(currPt => currPt.provider)\r\n      .filter(name => name !== \"\")\r\n\r\n    indications = [\r\n      ...new Set([\r\n        ...indications,\r\n        ...localPts\r\n          .map(currPt => currPt.indication)\r\n          .filter(name => name !== \"\"),\r\n      ]),\r\n    ]\r\n  }\r\n\r\n  return (\r\n    <div className=\"box diagnosis\">\r\n      <h1>Diagnosis</h1>\r\n      <label style={style} htmlFor=\"provider\">\r\n        Consulting Provider:\r\n      </label>\r\n      <br />\r\n      <input\r\n        style={style}\r\n        id=\"provider\"\r\n        list=\"providers-list\"\r\n        onChange={e => setPt(new Patient({ ...pt, provider: e.target.value }))}\r\n        value={pt.provider}\r\n      />\r\n      <datalist id=\"providers-list\">\r\n        {providers.map((provider, idx) => (\r\n          <option key={idx}>{provider}</option>\r\n        ))}\r\n      </datalist>\r\n      <label style={style} htmlFor=\"indication\">\r\n        Suspected Indication:\r\n      </label>\r\n      <br />\r\n      <input\r\n        style={style}\r\n        id=\"indication\"\r\n        list=\"indications-list\"\r\n        onChange={e =>\r\n          setPt(new Patient({ ...pt, indication: e.target.value }))\r\n        }\r\n        value={pt.indication}\r\n      />\r\n      <datalist id=\"indications-list\">\r\n        {indications.map((indication, idx) => (\r\n          <option key={idx}>{indication}</option>\r\n        ))}\r\n      </datalist>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Diagnosis\r\n","import React from \"react\"\r\nimport { Patient } from \"../utils\"\r\n\r\nconst Weight = ({ pt, setPt }) => {\r\n  return (\r\n    <div className=\"box tbw_ibw\">\r\n      <h1>Weight</h1>\r\n      <label htmlFor=\"weight\">Weight</label>\r\n      <input\r\n        id=\"weight\"\r\n        onChange={e => setPt(new Patient({ ...pt, weight: +e.target.value }))}\r\n        type=\"number\"\r\n        value={pt.weight}\r\n      />\r\n      <span>kg</span>\r\n      <br />\r\n      <label htmlFor=\"ibw\">IBW</label>\r\n      <input\r\n        id=\"ibw\"\r\n        onChange={e => setPt(new Patient({ ...pt, ibw: +e.target.value }))}\r\n        type=\"number\"\r\n        value={pt.ibw}\r\n      />\r\n      <span>kg</span>\r\n      <br />\r\n      <label htmlFor=\"tbw_ibw\">TBW/IBW</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"tbw_ibw\"\r\n        disabled\r\n        value={pt.tbw_ibw ? pt.tbw_ibw : \"\"}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weight\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport { Patient } from \"../utils\"\r\n\r\nconst SCr = ({ pt, setPt }) => {\r\n  let [inputValue, setInputValue] = useState(pt.scr ? pt.scr : \"\")\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      console.log(\"hello\")\r\n      setPt(new Patient({ ...pt, scr: +inputValue }))\r\n    }, 500)\r\n\r\n    return () => clearTimeout(timer)\r\n  }, [inputValue])\r\n\r\n  return (\r\n    <div className=\"box scr\">\r\n      <h1>SCr</h1>\r\n      <label htmlFor=\"scr\">SCr</label>\r\n      <input\r\n        id=\"scr\"\r\n        onChange={e => setInputValue(e.target.value)}\r\n        type=\"number\"\r\n        step=\"0.1\"\r\n        value={inputValue}\r\n      />\r\n      <span>mg/dL</span>\r\n      {Boolean(pt.scr && pt.scr < 1) && (\r\n        <>\r\n          <label htmlFor=\"scr_bmi\">BMI</label>\r\n          <input id=\"scr_bmi\" disabled value={pt.bmi ? pt.bmi : \"waiting..\"} />\r\n          <span>\r\n            kg/m\r\n            <sup>2</sup>\r\n          </span>\r\n          {pt.bmi && pt.bmi < 18.5 && <pre>underweight</pre>}\r\n\r\n          <label htmlFor=\"scr_age\">Age</label>\r\n          <input id=\"scr_age\" type=\"number\" disabled value={pt.age} />\r\n          <span>years</span>\r\n          {pt.age && pt.age >= 65 && <pre id=\"age_warning\">elderly</pre>}\r\n          <label htmlFor=\"adjusted_scr\">Adjust SCr?</label>\r\n          <input id=\"adjusted_scr\" type=\"number\" step=\"0.1\" />\r\n          <span>mg/dL</span>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SCr\r\n","import React from \"react\"\r\nimport { Patient } from \"../utils\"\r\n\r\nconst CrCl = ({ pt, setPt }) => {\r\n  return (\r\n    <div className=\"box crcl\">\r\n      <h1>CrCl</h1>\r\n      <label htmlFor=\"crcl\">CrCl</label>\r\n      <input\r\n        id=\"crcl\"\r\n        onChange={e =>\r\n          setPt(new Patient({ ...pt, manual_crcl: +e.target.value }))\r\n        }\r\n        type=\"number\"\r\n        placeholder=\"100\"\r\n        value={pt.manual_crcl}\r\n      />\r\n      <span>mL/min</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CrCl\r\n","import React from \"react\"\r\n\r\nimport { Patient } from \"../utils\"\r\n\r\nconst CrClCalculated = ({ pt, setPt }) => {\r\n  return (\r\n    <div className=\"box crcl_calculated\">\r\n      <h1>CrCl Calculation</h1>\r\n      <label htmlFor=\"age\">Age</label>\r\n      <input\r\n        id=\"age\"\r\n        onChange={e => setPt(new Patient({ ...pt, age: +e.target.value }))}\r\n        type=\"number\"\r\n        placeholder=\"\"\r\n        value={pt.age}\r\n      />\r\n      <span>years</span>\r\n      <br />\r\n      <label htmlFor=\"height\">Height</label>\r\n      <input\r\n        id=\"height\"\r\n        onChange={e => setPt(new Patient({ ...pt, height: +e.target.value }))}\r\n        type=\"number\"\r\n        placeholder=\"\"\r\n        value={pt.height}\r\n      />\r\n      <span>cm</span>\r\n      <br />\r\n      <label htmlFor=\"gender\">Gender</label>\r\n      <select\r\n        id=\"gender\"\r\n        onChange={e => setPt(new Patient({ ...pt, gender: +e.target.value }))}\r\n        value={pt.gender}\r\n      >\r\n        <option value=\"-1\"> </option>\r\n        <option value=\"1\">Male</option>\r\n        <option value=\"0\">Female</option>\r\n      </select>\r\n\r\n      <br />\r\n      <label htmlFor=\"crcl_calulated\">CrCl</label>\r\n      <input\r\n        id=\"crcl_calculated\"\r\n        disabled\r\n        value={pt.calculated_crcl ? pt.calculated_crcl : \"waiting ..\"}\r\n      />\r\n      <span>mL/min</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CrClCalculated\r\n","import React from \"react\"\r\n\r\nimport { Patient } from \"../utils\"\r\n\r\nconst Vd = ({ pt, setPt }) => {\r\n  return (\r\n    <div className=\"box vd\">\r\n      <h1>Vd</h1>\r\n      <label htmlFor=\"vd_kg\">Vd/kg</label>\r\n      <input\r\n        id=\"vd_kg\"\r\n        onChange={e => setPt(new Patient({ ...pt, vd_kg: +e.target.value }))}\r\n        type=\"number\"\r\n        step=\"0.05\"\r\n        placeholder={pt.vd_kg_suggested}\r\n        value={pt.vd_kg}\r\n      />\r\n      <span>L/kg</span>\r\n      <label htmlFor=\"vd\">\r\n        V<sub>d</sub>\r\n      </label>\r\n      <input id=\"vd\" value={pt.vd} type=\"number\" disabled />\r\n      <span>L</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Vd\r\n","import React from \"react\"\r\nimport { Patient } from \"../utils\"\r\n\r\nconst Ke = ({ pt, setPt }) => {\r\n  return (\r\n    <div className=\"box ke\">\r\n      <h1>Ke</h1>\r\n      <label htmlFor=\"ke_eqn\">\r\n        K<sub>e</sub>\r\n        eqn\r\n      </label>\r\n      <select\r\n        id=\"ke_eqn\"\r\n        onChange={e => setPt(new Patient({ ...pt, ke_eqn: e.target.value }))}\r\n      >\r\n        <option value=\"\" disabled>\r\n          {\" \"}\r\n        </option>\r\n        <option value=\"Matzke\">Matzke</option>\r\n        <option value=\"Crass\">Crass</option>\r\n      </select>\r\n      <label htmlFor=\"cl_vanco\">CLVanco</label>\r\n      <input id=\"cl_vanco\" type=\"number\" disabled value={pt.clvanco} />\r\n      <span>L/hr</span>\r\n      <label htmlFor=\"ke\">\r\n        K<sub>e</sub>\r\n      </label>\r\n      <input id=\"ke\" type=\"number\" placeholder=\"\" disabled value={pt.ke} />\r\n      <label htmlFor=\"t1_2\">\r\n        t<sub>1/2</sub>\r\n      </label>\r\n      <input id=\"t1_2\" type=\"number\" placeholder=\"\" disabled value={pt.t1_2} />\r\n      <span>hrs</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ke\r\n","import React from \"react\"\r\n\r\nconst MaintenanceDoseTable = ({ pt, setPt }) => {\r\n  let doses = [500, 750, 1000, 1250, 1500, 1750, 2000]\r\n  let frequencies = [6, 8, 12, 18, 24, 36, 48]\r\n\r\n  function render(dose, frequency) {\r\n    if (\r\n      pt.popAUCRounded(dose, frequency) >= 400 &&\r\n      pt.popAUCRounded(dose, frequency) <= 600\r\n    ) {\r\n      return (\r\n        <>\r\n          {pt.ke && pt.vd && <p>{pt.popAUCRounded(dose, frequency)}</p>}\r\n          {pt.ke && pt.vd && <p>{pt.popTroughRounded(dose, frequency)}</p>}\r\n          {<p>{((dose * 24) / frequency / 1000).toFixed(1)}</p>}\r\n          {pt.weight && <p>{(dose / pt.weight).toFixed(1)}</p>}\r\n        </>\r\n      )\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>Maintenance Dose Table</h1>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th> </th>\r\n            {doses.map((dose, i) => (\r\n              <th key={i}>{dose}mg</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {frequencies.map((frequency, i) => (\r\n            <tr key={i}>\r\n              <th>Q{frequency}H</th>\r\n              {doses.map((dose, j) => (\r\n                <td\r\n                  key={j}\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    backgroundColor: \"lightgrey\",\r\n                    padding: \"3px\",\r\n                  }}\r\n                >\r\n                  {render(dose, frequency)}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MaintenanceDoseTable\r\n","import React from \"react\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nimport { Patient } from \"../utils\"\r\n\r\nconst NavigationButtons = ({ pt, setPt, page, setPage }) => {\r\n  function handleSave(e) {\r\n    e.preventDefault()\r\n    if (typeof window !== \"undefined\") {\r\n      let localPts = localStorage.getItem(\"pts\")\r\n      if (localPts) {\r\n        localPts = JSON.parse(localPts)\r\n      } else {\r\n        localPts = []\r\n      }\r\n\r\n      let idx = localPts.findIndex(\r\n        currPt => currPt.mrn === pt.mrn || currPt.name === pt.name\r\n      )\r\n\r\n      if (idx === -1) {\r\n        localPts.push({ ...pt })\r\n      } else {\r\n        localPts[idx] = { ...pt }\r\n      }\r\n      localStorage.setItem(\"pts\", JSON.stringify(localPts))\r\n\r\n      alert(`${pt.mrn ? pt.mrn + \" - \" : \"\"}${pt.name} saved.`)\r\n    } else {\r\n      alert(\"Sorry, something went wrong. 😬\")\r\n    }\r\n  }\r\n\r\n  function handleNew(e) {\r\n    setPt(new Patient())\r\n    navigate(\"/newconsult/\")\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"1rem\",\r\n        display: \"flex\",\r\n        gap: \"5px\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <button\r\n        onClick={() => setPage(page - 1)}\r\n        {...(page === 0 ? { disabled: true } : {})}\r\n      >\r\n        {\"<<\"} Back\r\n      </button>\r\n      <button onClick={() => navigate(\"/\")}>Close</button>\r\n      <button onClick={handleSave}>Save</button>\r\n      <button onClick={e => handleNew(e)}>New</button>\r\n      <button\r\n        onClick={() => setPage(page + 1)}\r\n        {...(page === 1 ? { disabled: true } : {})}\r\n      >\r\n        Next {\">>\"}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavigationButtons\r\n","import React from \"react\"\r\nimport { navigate } from \"gatsby\"\r\nimport \"./Buttons.css\"\r\n\r\nconst Buttons = () => {\r\n  return (\r\n    <div className=\"flex-around\">\r\n      <button className=\"lp-btn\" onClick={() => navigate(\"/newconsult/\")}>\r\n        New Consult\r\n      </button>\r\n      <button className=\"lp-btn\" onClick={() => navigate(\"/postlevels/\")}>\r\n        Post Levels\r\n      </button>\r\n      <button className=\"lp-btn\">Patient View</button>\r\n      <button className=\"lp-btn\">Patient List</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buttons\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export function cockcroftGault(age, tbw, ibw, scr, gender) {\r\n  if (age && tbw && ibw && scr && (gender === 0 || gender === 1)) {\r\n    let abw\r\n    if (tbw && ibw) abw = ibw + 0.4 * (tbw - ibw)\r\n\r\n    let wtUsed = tbw / ibw >= 1.2 ? abw : tbw < ibw ? tbw : ibw\r\n\r\n    let cockcroft = (((140 - age) * wtUsed) / scr / 72) * [0.85, 1][gender]\r\n    return +cockcroft.toFixed(2)\r\n  }\r\n\r\n  return \"\"\r\n}\r\n\r\nfunction integerOrRoundNumber(number, decimalPlace) {\r\n  if (number % 1 == 0) return number\r\n  else return number.toFixed(decimalPlace)\r\n}\r\n\r\nexport class Patient {\r\n  constructor(data) {\r\n    this.mrn = \"\"\r\n    this.last_name = \"\"\r\n    this.first_name = \"\"\r\n    this.provider = \"\"\r\n    this.indication = \"\"\r\n    this.weight = \"\"\r\n    this.ibw = \"\"\r\n    this.scr = \"\"\r\n    this.age = \"\"\r\n    this.height = \"\"\r\n    this.gender = \"\"\r\n    this.manual_crcl = \"\"\r\n    this.vd_kg = \"\"\r\n    this.ke_eqn = \"\"\r\n\r\n    for (let key in data) {\r\n      this[key] = data[key]\r\n    }\r\n  }\r\n\r\n  popAUCRounded = function (dose, frequency) {\r\n    if (this.ke && this.vd && dose && frequency) {\r\n      return Math.round(this.popAUC(dose, frequency) / 10) * 10\r\n    }\r\n    return 0\r\n  }\r\n\r\n  popAUC = function (dose, frequency) {\r\n    let infusionRate = 1000\r\n    if (this.ke && this.vd && dose && frequency) {\r\n      let popCeoi = this.popCeoi(dose, frequency)\r\n      let popCmin = this.popCmin(dose, frequency)\r\n      let AUCinf = ((popCeoi + popCmin) / 2) * (dose / infusionRate)\r\n      let AUCeli = (popCeoi - popCmin) / this.ke\r\n      let MIC = 1\r\n      return ((AUCinf + AUCeli) * (24 / frequency)) / MIC\r\n    }\r\n    return 0\r\n  }\r\n\r\n  popCmax = function (dose, frequency) {\r\n    let infusionRate = 1000\r\n    if (this.ke && this.vd && dose && frequency)\r\n      return (\r\n        this.popCeoi(dose, frequency) /\r\n        Math.exp((-this.ke * dose) / infusionRate)\r\n      )\r\n    return 0\r\n  }\r\n\r\n  popCeoi = function (dose, frequency) {\r\n    if (this.ke && this.vd && dose && frequency)\r\n      return dose / this.vd / (1 - Math.exp(-this.ke * frequency))\r\n    return 0\r\n  }\r\n\r\n  popTroughRounded = function (dose, frequency) {\r\n    return Math.round(this.popTrough(dose, frequency))\r\n  }\r\n\r\n  popTrough = function (dose, frequency) {\r\n    let offset = 0.5 // trough 30 min before dose\r\n    if (this.ke && this.vd && dose && frequency) {\r\n      return (\r\n        this.popCmax(dose, frequency) *\r\n        Math.exp(-this.ke * (frequency - offset))\r\n      )\r\n    }\r\n    return 0\r\n  }\r\n\r\n  popCmin = function (dose, frequency) {\r\n    if (this.ke && this.vd && dose && frequency) {\r\n      return this.popCmax(dose, frequency) * Math.exp(-this.ke * frequency)\r\n    }\r\n    return 0\r\n  }\r\n\r\n  get name() {\r\n    if (this.first_name && this.last_name) {\r\n      return `${this.last_name}, ${this.first_name}`\r\n    } else if (this.last_name) return this.last_name\r\n    else if (this.first_name) return this.first_name\r\n    return \"\"\r\n  }\r\n\r\n  get ke_eqn_suggested() {\r\n    if (this.bmi) {\r\n      return this.bmi >= 30 ? \"Crass\" : \"Matzke\"\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  get t1_2() {\r\n    if (this.ke) {\r\n      return +(0.693 / this.ke).toFixed(1)\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  get matske() {\r\n    return +((this.crcl * 0.689 + 3.66) * 0.06).toFixed(1)\r\n  }\r\n\r\n  get crass() {\r\n    if (this.age && this.scr && this.genderToChar && this.tbw) {\r\n      return +(\r\n        9.656 -\r\n        0.078 * this.age -\r\n        2.009 * this.scr +\r\n        1.09 * this.gender +\r\n        0.04 * this.tbw ** 0.75\r\n      ).toFixed(1)\r\n    }\r\n    return 0\r\n  }\r\n\r\n  get clvanco() {\r\n    if ((this.ke_eqn || this.ke_eqn_suggested) && this.crcl) {\r\n      if (this.ke_eqn === \"Matzke\") return this.matske\r\n      else if (this.ke_eqn === \"Crass\") return this.crass\r\n      else if (this.ke_eqn_suggested === \"Matzke\") return this.matske\r\n      else if (this.ke_eqn_suggested === \"Crass\") return this.crass\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  get ke() {\r\n    if (this.clvanco && this.vd) return +(this.clvanco / this.vd).toFixed(4)\r\n    return \"\"\r\n  }\r\n\r\n  get genderToChar() {\r\n    if (this.gender === 0 || this.gender === 1) {\r\n      return [\"F\", \"M\"][this.gender]\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  get heightToFeetInches() {\r\n    if (this.height) {\r\n      let inches = this.height / 2.54\r\n      let feet = Math.floor(inches / 12)\r\n      let inchesRemainder = Math.round(inches % 12)\r\n      return `${feet}'${inchesRemainder}\"`\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  // Weight Methods\r\n  get tbw() {\r\n    return this.weight ? this.weight : \"\"\r\n  }\r\n\r\n  get wtInLbs() {\r\n    return this.weight ? Math.round(this.weight * 2.2) : \"\"\r\n  }\r\n\r\n  get adjBW() {\r\n    if (this.tbw && this.ibw)\r\n      return integerOrRoundNumber(this.ibw + 0.4 * (this.tbw - this.ibw))\r\n    return \"\"\r\n  }\r\n\r\n  get wtUsed() {\r\n    if (this.tbw && this.ibw)\r\n      return this.tbw_ibw >= 1.2\r\n        ? this.adjBW\r\n        : this.tbw < this.ibw\r\n        ? this.tbw\r\n        : this.ibw\r\n    return \"\"\r\n  }\r\n\r\n  get calculated_crcl() {\r\n    if (\r\n      this.age &&\r\n      this.tbw &&\r\n      this.ibw &&\r\n      this.scr &&\r\n      (this.gender === 0 || this.gender === 1)\r\n    ) {\r\n      let cockcroft =\r\n        (((140 - this.age) * this.wtUsed) / this.scr / 72) *\r\n        [0.85, 1][this.gender]\r\n      return +cockcroft.toFixed(2)\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  get crcl() {\r\n    return this.manual_crcl\r\n      ? this.manual_crcl\r\n      : this.calculated_crcl\r\n      ? this.calculated_crcl\r\n      : \"\"\r\n  }\r\n\r\n  get bmi() {\r\n    if (this.height && this.weight) {\r\n      return +(this.weight / (this.height / 100) ** 2).toFixed(2)\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  get tbw_ibw() {\r\n    if (this.weight && this.ibw) {\r\n      return +(this.weight / this.ibw).toFixed(2)\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  get vd_kg_suggested() {\r\n    if (this.weight && this.height) {\r\n      return this.bmi >= 30 ? 0.5 : 0.65\r\n    }\r\n    return 0.65\r\n  }\r\n\r\n  get vd() {\r\n    if (this.tbw && this.vd_kg) {\r\n      return +(this.tbw * this.vd_kg).toFixed(1)\r\n    }\r\n    return \"\"\r\n  }\r\n}\r\n"],"names":["pt","setPt","isBrowser","window","style","width","textAlign","localPts","localStorage","getItem","JSON","parse","map","currPt","Patient","className","htmlFor","id","list","idx","key","value","mrn","name","onClick","e","searchTerm","document","getElementById","findIndex","String","alert","handleLoad","displayLogic","display","gap","flexWrap","Load","Boolean","tbw_ibw","scr","displayManualCrClLogic","weight","crcl","style2","height","onChange","target","last_name","first_name","providers","indications","split","provider","filter","Set","indication","type","ibw","disabled","useState","inputValue","setInputValue","useEffect","timer","setTimeout","console","log","clearTimeout","step","bmi","age","manual_crcl","placeholder","gender","calculated_crcl","vd_kg","vd_kg_suggested","vd","ke_eqn","clvanco","ke","t1_2","doses","dose","i","frequency","j","backgroundColor","padding","popAUCRounded","popTroughRounded","toFixed","render","page","setPage","marginTop","justifyContent","navigate","preventDefault","push","setItem","stringify","_defineProperties","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","data","this","Math","round","popAUC","popCeoi","popCmin","popCmax","exp","popTrough","Constructor","protoProps","staticProps","genderToChar","tbw","ke_eqn_suggested","matske","crass","inches","floor","number","decimalPlace","adjBW","wtUsed","prototype"],"sourceRoot":""}